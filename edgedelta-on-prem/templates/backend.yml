{{- if .Values.api.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-api-deployment
  namespace: {{ .Release.Namespace | quote }}
  labels:
    k8s-app: admin-api
    {{- include "edgedelta.onprem.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.api.replicaCount | default 4 }}
  selector:
    matchLabels:
      k8s-app: admin-api
  strategy:
    type: RollingUpdate
    rollingUpdate: # update pods 1 by 1
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        k8s-app: admin-api
        {{- include "edgedelta.onprem.labels" . | nindent 8 }}
    spec:
      {{- if .Values.api.useServiceAccount }}
      serviceAccountName: {{ include "edgedelta.onprem.fullname" . | quote }}
      {{- end }}
      {{- if .Values.api.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.api.podSecurityContext | nindent 8 }}
      {{- else if .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      containers:
      - name: api
        image: {{ .Values.repository }}/admin:on-prem-{{ .Chart.AppVersion }}
        ports:
          - containerPort: {{ .Values.api.port | default 4444 }}
        env:
          - name: ED_MODE
            value: prod
          - name: ED_SECRET_PROVIDER
            value: env
          - name: ED_BACKEND_ON_PREMISE
            value: "1"
          - name: ED_THROTTLE_ENABLED
            value: "0"
          - name: ED_DATABASE_TABLE_NAME_PREFIX
            value: "ed"
          - name: API_TOKEN_MASTER_SECRET
            value: {{ .Values.api.masterSecret | default uuidv4 | quote }}
          - name: OKTA_TOKEN
            value: {{ .Values.okta.token | quote }}
          - name: OKTA_CLIENT_ID
            value: {{ .Values.okta.clientId | quote }}
          - name: OKTA_NEW_USER_PASSWORD
            value: {{ .Values.okta.newUserPassword | quote }}
          {{- if .Values.api.login.saml.enabled }}
          - name: ENABLE_SAML
            value: "1"
          - name: SAML_URL #api handles the assertions
          {{- if .Values.app.overrideApiUrl }}
            value: {{ .Values.app.overrideApiUrl | quote }}
          {{- else }}
            value: "https://{{ .Values.api.hostName }}"
          {{- end }}
          - name: "SAML_REDIRECT_URL"
          {{- if .Values.api.login.saml.redirectUrl }}
            value: {{ .Values.api.login.saml.redirectUrl | quote }}
          {{- else }}
            value: "https://{{ .Values.app.hostName }}"
          {{- end }}
          - name: SAML_KEY
            valueFrom:
              secretKeyRef:
                key: {{ .Values.initializer.samlKeyName | default "saml-key" | quote }}
                name: {{ .Values.initializer.samlKeyName | default "saml-key" | quote }}
          - name: SAML_CERT
            valueFrom:
              secretKeyRef:
                key: {{ .Values.initializer.samlCertName | default "saml-cert" | quote }}
                name: {{ .Values.initializer.samlCertName | default "saml-cert" | quote }}
          {{- if .Values.api.login.saml.alwaysUseSaml }}
          - name: WITHOUT_OKTA
            value: "1"
          {{- end }}
          {{- end }}
          {{- if .Values.api.login.disableAuthentication }}
          - name: ED_DISABLE_AUTHENTICATION
            value: "1"
          - name: WITHOUT_OKTA
            value: "1"
          {{- end }}
          - name: BACKEND_ON_PREMISE_DYNAMO_ENDPOINT
            {{- if .Values.database.scylladb.enabled }}
            value: http://scylladb-service.{{ .Release.Namespace }}.{{ .Values.dnsSuffix }}:8000
            {{- else if .Values.database.dynamodb.enabled }}
            value: http://dynamodb-service.{{ .Release.Namespace }}.{{ .Values.dnsSuffix }}:8000
            {{- end }}
          - name: BACKEND_ON_PREMISE_DYNAMO_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: {{ .Values.initializer.accessKeyIdName | default "ed-database-access-key-id" | quote }}
                name: {{ .Values.initializer.accessKeyIdName | default "ed-database-access-key-id" | quote }}
          - name: BACKEND_ON_PREMISE_DYNAMO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                key: {{ .Values.initializer.secretKeyName | default "ed-database-secret-key" | quote }}
                name: {{ .Values.initializer.secretKeyName | default "ed-database-secret-key" | quote }}
          {{- if .Values.openFaas.enabled }}
          - name: ED_OPENFAAS_GATEWAY
            value: "http://gateway-external.{{ .Release.Namespace }}.{{ .Values.dnsSuffix }}:8080"
          {{- else }}
          - name: ED_DISABLE_OPENFAAS
            value: "1"
          {{- end }}
          {{- if or .Values.app.hostName .Values.api.corsOverrides }}
          - name: ED_CORS_OVERRIDE
          {{- if and .Values.app.hostName .Values.api.corsOverrides }}
            value: {{ append .Values.api.corsOverrides .Values.app.hostName | join "," | quote }}
          {{- else if .Values.app.hostName }}
            value: {{ .Values.app.hostName | quote }}
          {{- else if .Values.api.corsOverrides }}
            value: {{ .Values.api.corsOverrides | join "," | quote }}
          {{- end }}
          {{- end }}
          {{- if .Values.influxdb.enabled }}
          - name: ED_BACKEND_ON_PREMISE_INFLUX
            value: "1"
          - name: BACKEND_ON_PREMISE_INFLUX_HOST
          {{- $port := .Values.influxdb.port | default 8086 }}
          {{- if .Values.influxdb.hostName }}
            value: "https://{{ .Values.influxdb.hostName }}"
          {{- else }}
            value: "http://influxdb-service.{{ .Release.Namespace }}.{{ .Values.dnsSuffix }}:{{ $port }}"
          {{- end }}
          - name: INFLUX_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ include "edgedelta.onprem.fullname" . }}-auth
                key: "INFLUXDB_ADMIN_USER_TOKEN"
          - name: INFLUX_ORG_ID
            valueFrom:
              secretKeyRef:
                name: {{ include "edgedelta.onprem.fullname" . }}-auth
                key: "INFLUX_ORG_ID"
          {{- end }}
          {{- if .Values.elasticsearch.enabled }}
          - name: ED_BACKEND_ON_PREMISE_ELASTIC
            value: "1"
          {{- if .Values.elasticsearch.connection.cloud_id }}
          - name: BACKEND_ON_PREMISE_ELASTIC_CLOUD_ID
            value: {{ .Values.elasticsearch.connection.cloud_id | quote }}
          {{- else }}
          {{- if .Values.elasticsearch.image.enabled }}
          - name: BACKEND_ON_PREMISE_ELASTIC_ADDRESSES
          {{- $eport := .Values.elasticsearch.connection.port | default 9200 }}
          {{- if .Values.elasticsearch.connection.hostName }}
            value: "https://{{ .Values.elasticsearch.connection.hostName }}"
          {{- else }}
            value: "http://elasticsearch-service.{{ .Release.Namespace }}.{{ .Values.dnsSuffix }}:{{ $eport }}"
          {{- end }}
          {{- else }}
          - name: BACKEND_ON_PREMISE_ELASTIC_ADDRESSES
            value: {{ .Values.elasticsearch.connection.addresses | quote }}
          {{- end }}
          {{- end }}
          {{- if .Values.elasticsearch.connection.token }}
          - name: BACKEND_ON_PREMISE_ELASTIC_TOKEN
            value: {{ .Values.elasticsearch.connection.token | quote }}
          {{- else }}
          {{- if .Values.elasticsearch.image.enabled }}
          - name: BACKEND_ON_PREMISE_ELASTIC_USERNAME
            value: "elastic" # when image is enabled username is always elastic
          {{- else }}
          - name: BACKEND_ON_PREMISE_ELASTIC_USERNAME
            value: {{ .Values.elasticsearch.connection.username | quote }}
          {{- end }}
          - name: BACKEND_ON_PREMISE_ELASTIC_PASSWORD
            value: {{ .Values.elasticsearch.connection.password | default "elastic-password" | quote }}
          {{- end }}
          {{- if .Values.elasticsearch.connection.region }}
          - name: BACKEND_ON_PREMISE_ELASTIC_REGION
            value: {{ .Values.elasticsearch.connection.region | quote }}
          {{- end }}
          {{- end }}
        command:
          - /edgedelta/admin
        args:
          - --region
          - None
          - --api_port
          - {{ .Values.api.port | default 4444 | quote }}
        readinessProbe:
          httpGet:
            path: "/probes/ready"
            port: {{ .Values.api.port | default 4444 }}
            scheme: "HTTP"
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 1
          failureThreshold: 10
        resources:
          {{- toYaml .Values.api.resources | nindent 12 }}
        imagePullPolicy: Always
---
kind: Service
apiVersion: v1
metadata:
  name: admin-api-service
  namespace: {{ .Release.Namespace | quote }}
spec:
  selector:
    k8s-app: admin-api
    {{- include "edgedelta.onprem.labels" . | nindent 4 }}
  ports:
    - port: {{ .Values.api.port | default 4444 }}
      name: api
{{- end }}