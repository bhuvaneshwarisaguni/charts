{{- if .Values.rehydration.handlerOptions.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rehydration-handler
  namespace: {{ .Release.Namespace | quote }}
  labels:
    k8s-app: rehydration-handler
    {{- include "edgedelta.onprem.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.rehydration.handlerOptions.replicaCount }}
  selector:
    matchLabels:
      k8s-app: rehydration-handler
  template:
    metadata:
      labels:
        k8s-app: rehydration-handler
        {{- include "edgedelta.onprem.labels" . | nindent 8 }}
    spec:
      {{- if .Values.rehydration.handlerOptions.useServiceAccount }}
      serviceAccountName: {{ include "edgedelta.onprem.fullname" . | quote }}
      {{- end }}
      terminationGracePeriodSeconds: 10
      {{- if .Values.rehydration.handlerOptions.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.rehydration.handlerOptions.podSecurityContext | nindent 8 }}
      {{- else if .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      containers:
      - name: rehydration-handler
        image: {{ .Values.repository }}/function:{{ .Chart.AppVersion }}
        ports:
          - containerPort: {{ .Values.rehydration.handlerOptions.port | default 8080 }}
        command:
          - /edgedelta/faas
        env:
          - name: ED_MODE
            value: {{ .Values.rehydration.mode | default "prod" | quote }}
          - name: ED_REHYDRATION_PUSH_BATCH_SIZE
            value: {{ .Values.rehydration.pushBatchSize | default "10000" | quote }}
          - name: ED_HANDLER_NAME
            value: "rehydrate"
          - name: ED_REMOTE_REPOSITORY
            value: "1"
          {{- if or .Values.database.dynamodb.enabled .Values.database.scylladb.enabled }} # full on-prem case
          - name: ED_ON_PREM_DYNAMO_ENDPOINT
            {{- if .Values.database.scylladb.enabled }}
            value: http://scylladb-service.{{ .Release.Namespace }}.{{ .Values.dnsSuffix }}:8000
            {{- else if .Values.database.dynamodb.enabled }}
            value: http://dynamodb-service.{{ .Release.Namespace }}.{{ .Values.dnsSuffix }}:8000
            {{- end }}
          - name: ED_REMOTE_REPOSITORY_MODE
            value: "full-on-prem"
          - name: ED_DATABASE_TABLE_NAME_PREFIX
            value: "ed"
          - name: ED_ON_PREM_DYNAMO_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: {{ .Values.initializer.accessKeyIdName | default "ed-database-access-key-id" | quote }}
                name: {{ .Values.initializer.accessKeyIdName | default "ed-database-access-key-id" | quote }}
          - name: ED_ON_PREM_DYNAMO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                key: {{ .Values.initializer.secretKeyName | default "ed-database-secret-key" | quote }}
                name: {{ .Values.initializer.secretKeyName | default "ed-database-secret-key" | quote }}
          {{- else }} # hybrid on-prem case
          - name: ED_REMOTE_REPOSITORY_MODE
            value: "hybrid-on-prem"
          - name: ED_REMOTE_TOKEN_FILE
            value: "/etc/{{ .Values.api.tokenSecretName | default "ed-api-token" }}/{{ .Values.api.tokenSecretName | default "ed-api-token" }}"
          - name: ED_API_ENDPOINT
            value: {{ .Values.rehydration.apiEndpoint | quote }}
          {{- end }}
          - name: ED_MAX_INFLIGHT
            value: "1"
          - name: ED_REHYDRATION_BLOCK_TIMEOUT
            value: 5m
          - name: STORE_PORT
            value: "8085"
          - name: GOGC
          {{- if .Values.rehydration.goGC }}
            value: "{{ .Values.rehydration.goGC }}"
          {{- else }}
            value: "20"
          {{- end }}
          - name: GOMEMLIMIT
            value: "{{ div (mul (.Values.rehydration.memoryLimit | default 16) 9) 10 }}GiB" # This value should be less than memory limit of the pod, ideally 90% of the limit
          - name: GODEBUG
            value: "madvdontneed=1"
          {{- if .Values.rehydration.concurrency }}
          - name: ED_REHYDRATION_CONCURRENCY_LIMIT
            value: "{{ .Values.rehydration.concurrency }}"
          {{- end }}
          {{- if .Values.rehydration.handlerOptions.clickhouseRhConnection }}
          - name: CLICKHOUSE_RH_CONNECTION
            value: "{{ .Values.rehydration.handlerOptions.clickhouseRhConnection }}"
          {{- end }}
          - name: ED_CH_CHUNK_SIZE_MB
            value: {{ .Values.rehydration.chunkSize | default "125" | quote }}
          {{- if .Values.rehydration.handlerOptions.rehydrationBufferPath }}
          - name: ED_REHYDRATION_BUFFER_PATH # Path should be an existing directory.
            value: {{ .Values.rehydration.handlerOptions.rehydrationBufferPath | quote }}
          {{- end }}
        resources:
          {{- toYaml .Values.rehydration.handlerOptions.resources | nindent 10 }}
        imagePullPolicy: Always
        volumeMounts:
        {{- if and (not .Values.database.dynamodb.enabled) (not .Values.database.scylladb.enabled) }}
        - name: ed-api-token
          mountPath: "/etc/{{ .Values.api.tokenSecretName | default "ed-api-token" }}"
          readOnly: true
        {{- end }}
        {{- if .Values.rehydration.handlerOptions.rehydrationBufferPath }}
        - name: ed-rehydration-buffer
          mountPath: {{ .Values.rehydration.handlerOptions.rehydrationBufferPath | quote }}
        {{- end }}
      volumes:
      {{- if and (not .Values.database.dynamodb.enabled) (not .Values.database.scylladb.enabled) }}
      - name: ed-api-token
        secret:
          secretName: {{ .Values.api.tokenSecretName | default "ed-api-token" | quote }}
      {{- end }}
      {{- if .Values.rehydration.handlerOptions.rehydrationBufferPath }}
      - name: ed-rehydration-buffer
        emptyDir: {}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: rehydration-handler-service
  namespace: {{ .Release.Namespace | quote }}
spec:
  type: ClusterIP
  ports:
    - port: {{ .Values.rehydration.handlerOptions.port | default 8080 }}
  selector:
    k8s-app: rehydration-handler
{{- end }}