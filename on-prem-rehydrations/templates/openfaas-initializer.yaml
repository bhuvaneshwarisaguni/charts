{{- if .Values.openFaas.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "edgedelta.fullname" . }}-openfaas-initializer
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": "post-install"
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": "hook-succeeded,hook-failed"
  labels:
    k8s-app: openfaas-initializer
    {{- include "edgedelta.labels" . | nindent 4 }}
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      labels:
        k8s-app: openfaas-initializer
        {{- include "edgedelta.labels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: openfaas-initializer
        image: gcr.io/edgedelta/faas-init:2022-02-18-10-30-00
        command:
          - /bin/bash
          - -c
          - |
            set -e;

            retry() {
              TRY_COUNT=0
              until "$@"
              do
                ((TRY_COUNT++))
                if [[ TRY_COUNT -ge 30 ]];then
                  echo "Failed executing \"$@\" 30 times, giving up."
                  return 1
                fi
                echo "...retrying"
                sleep 10
              done
            }

            export OPENFAAS_URL=http://gateway.{{ .Release.Namespace }}.svc.cluster.local:8080
            retry faas deploy -f /var/lib/edgedelta/function-config.yml
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        imagePullPolicy: Always
        volumeMounts:
          - name: {{ include "edgedelta.fullname" . }}-openfaas-initializer-contents
            mountPath: /var/lib/edgedelta
      volumes:
        - name: {{ include "edgedelta.fullname" . }}-openfaas-initializer-contents
          configMap:
            name: {{ include "edgedelta.fullname" . }}-openfaas-initializer-contents
      restartPolicy: OnFailure
{{- end }}